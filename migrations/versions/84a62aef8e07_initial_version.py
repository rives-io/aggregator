"""Initial Version

Revision ID: 84a62aef8e07
Revises: 
Create Date: 2024-06-28 10:07:37.909905

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '84a62aef8e07'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consoleachievement',
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('slug')
    )
    op.create_table('profile',
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('address')
    )
    op.create_table('awardedconsoleachievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ca_slug', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('comments', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['ca_slug'], ['consoleachievement.slug'], ),
    sa.ForeignKeyConstraint(['profile_address'], ['profile.address'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cartridge',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('authors', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('buy_value', sa.Integer(), nullable=False),
    sa.Column('sell_value', sa.Integer(), nullable=False),
    sa.Column('creator_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['creator_address'], ['profile.address'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collectedcartridges',
    sa.Column('cartridge_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('profile_address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contract_address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('asset_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cartridge_id'], ['cartridge.id'], ),
    sa.ForeignKeyConstraint(['profile_address'], ['profile.address'], ),
    sa.PrimaryKeyConstraint('cartridge_id', 'profile_address', 'contract_address', 'asset_id')
    )
    op.create_table('rule',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('cartridge_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['cartridge_id'], ['cartridge.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tape',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('buy_value', sa.Integer(), nullable=False),
    sa.Column('sell_value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('creator_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rule_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['creator_address'], ['profile.address'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['rule.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collectedtapes',
    sa.Column('tape_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('profile_address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contract_address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('asset_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ballance', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profile_address'], ['profile.address'], ),
    sa.ForeignKeyConstraint(['tape_id'], ['tape.id'], ),
    sa.PrimaryKeyConstraint('tape_id', 'profile_address', 'contract_address')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('collectedtapes')
    op.drop_table('tape')
    op.drop_table('rule')
    op.drop_table('collectedcartridges')
    op.drop_table('cartridge')
    op.drop_table('awardedconsoleachievement')
    op.drop_table('profile')
    op.drop_table('consoleachievement')
    # ### end Alembic commands ###
